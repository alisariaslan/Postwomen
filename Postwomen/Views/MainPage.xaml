<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns:strings="clr-namespace:Postwomen.Resources.Strings"  xmlns="http://schemas.microsoft.com/dotnet/2021/maui" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" x:Class="Postwomen.Views.MainPage" xmlns:vm="clr-namespace:Postwomen.ViewModels" xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit">

	<ContentPage.Behaviors>
		<toolkit:StatusBarBehavior StatusBarColor="{StaticResource Black}" StatusBarStyle="LightContent" />
	</ContentPage.Behaviors>

	<Shell.TitleView>
		<Grid ColumnDefinitions="Auto,*" Margin="0,0,0,0">
			<HorizontalStackLayout Grid.Column="0" VerticalOptions="Center" Spacing="10">
				<Image Source="women_black" WidthRequest="50" HeightRequest="50" Aspect="AspectFill" Opacity=".8">
					<Image.Shadow>
						<Shadow Brush="{AppThemeBinding Light=Transparent, Dark=White}" />
					</Image.Shadow>
				</Image>
				<VerticalStackLayout>
					<Label Text="Postwomen" TextColor="White" FontSize="Title" FontAttributes="Bold" />
					<Label TextColor="White" FontSize="Subtitle" FontAttributes="Bold">
						<Label.Triggers>
							<DataTrigger TargetType="Label" Binding="{Binding IsRefreshing}" Value="true">
								<Setter Property="Text" Value="{x:Static strings:AppResources.refreshing}" />
							</DataTrigger>
							<DataTrigger TargetType="Label" Binding="{Binding IsRefreshing}" Value="false">
								<Setter Property="Text" Value="{x:Static strings:AppResources.readytocall}" />
							</DataTrigger>
						</Label.Triggers>
					</Label>
					<VerticalStackLayout.Shadow>
						<Shadow Brush="Black" Opacity=".5" />
					</VerticalStackLayout.Shadow>
				</VerticalStackLayout>
				<!--<ActivityIndicator x:Name="indicator1" IsRunning="{Binding IsRefreshing}" IsVisible="{Binding IsRefreshing}" WidthRequest="25" HeightRequest="25" Color="White"/>-->
			</HorizontalStackLayout>
			<HorizontalStackLayout Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" Margin="0,0,15,0" Spacing="15">
				<ImageButton Source="refresh.png" Clicked="ImageButton_Clicked" IsVisible="True" Command="{Binding RefreshCommand}" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" />
				<ImageButton Source="addnew.png" IsVisible="{Binding HasData}" Command="{Binding CreateNewCardCommand}" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" />
				<ImageButton Source="logs.png" Command="{Binding LogsCommand}" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" />
				<ImageButton Source="settings.png" Command="{Binding SettingsCommand}" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" />

				<HorizontalStackLayout.Shadow>
					<Shadow Brush="Black" />
				</HorizontalStackLayout.Shadow>
			</HorizontalStackLayout>
			<Grid.Background>
				<LinearGradientBrush EndPoint="1,0">
					<GradientStop Color="{AppThemeBinding Light={StaticResource Gradi1}, Dark={StaticResource Gray950}}" Offset="0.1" />
					<GradientStop Color="{AppThemeBinding Light={StaticResource Gradi2}, Dark={StaticResource Gray950}}" Offset="1.0" />
				</LinearGradientBrush>
			</Grid.Background>
		</Grid>
	</Shell.TitleView>

	<Grid>
		<Image x:Name="backgroundImage" Source="white_background_vertical" IsVisible="{AppThemeBinding Light=True, Dark=False}"  Aspect="Center" />
		<CollectionView ItemsSource="{Binding ServerCards}" SelectionMode="None" ItemsLayout="{Binding ItemsLayout}">
			<CollectionView.ItemTemplate>
				<DataTemplate>
					<Grid>
						<Border Margin="8" StrokeShape="RoundRectangle 8,8,8,8" Stroke="Black" HorizontalOptions="Center" >
							<Border.Shadow>
								<Shadow Brush="Black" Opacity=".5" />
							</Border.Shadow>
							<Grid>
								<FlexLayout Direction="Column" Wrap="Wrap">
									<Image Source="white_background_horizontal_card" FlexLayout.Basis="100%" Aspect="AspectFill" Opacity="{AppThemeBinding Light=1, Dark=.25}" />
								</FlexLayout>
								<VerticalStackLayout Spacing="10">
									<Grid ColumnDefinitions=".7*,.3*" BackgroundColor="{AppThemeBinding Light=Black, Dark={StaticResource Gray950}}" Padding="10,5,10,5">
										<Label Grid.Column="0" Text="{Binding Name}" FontSize="16" FontAttributes="Bold" TextColor="White" VerticalTextAlignment="Center" />
										<Label Grid.Column="1" Text="{Binding PortString}" FontSize="20" HorizontalOptions="End" TextColor="White" VerticalTextAlignment="Center" />
									</Grid>
									<VerticalStackLayout Spacing="10" Padding="10,5,10,5">
										<Label Text="{Binding Url}" FontSize="12" FontAttributes="Italic" TextColor="DarkBlue" />
										<Label Text="{Binding Description}" IsVisible="{Binding HasDescription}" FontSize="14" />
									</VerticalStackLayout>
									<HorizontalStackLayout>
										<CheckBox x:Name="checkBox1" HeightRequest="20" HorizontalOptions="Start" IsChecked="{Binding IsAutoCheckEnabled}">
											<CheckBox.Behaviors>
												<toolkit:EventToCommandBehavior EventName="CheckedChanged" Command="{Binding SaveCardCommand}" CommandParameter="{Binding Id}" />
											</CheckBox.Behaviors>
										</CheckBox>
										<Label FontSize="14" VerticalTextAlignment="Center">
											<Label.Triggers>
												<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkBox1}, Path=IsChecked}" Value="true">
													<Setter Property="Text" Value="{x:Static strings:AppResources.timechecksenabled}" />
													<Setter Property="FontAttributes" Value="Bold" />
												</DataTrigger>
												<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkBox1}, Path=IsChecked}" Value="false">
													<Setter Property="Text" Value="{x:Static strings:AppResources.timechecksdisabled}" />
													<Setter Property="FontAttributes" Value="None" />
												</DataTrigger>
											</Label.Triggers>
										</Label>
									</HorizontalStackLayout>
									<HorizontalStackLayout>
										<CheckBox x:Name="checkBox2" HeightRequest="20" HorizontalOptions="Start" IsChecked="{Binding IsSendNotificationsOnChangesEnabled}">
											<CheckBox.Behaviors>
												<toolkit:EventToCommandBehavior EventName="CheckedChanged" Command="{Binding SaveCardCommand}" CommandParameter="{Binding Id}" />
											</CheckBox.Behaviors>
										</CheckBox>
										<Label FontSize="14" VerticalTextAlignment="Center">
											<Label.Triggers>
												<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkBox2}, Path=IsChecked}" Value="true">
													<Setter Property="Text" Value="{x:Static strings:AppResources.sendnotifonchangesenabled}" />
													<Setter Property="FontAttributes" Value="Bold" />
												</DataTrigger>
												<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkBox2}, Path=IsChecked}" Value="false">
													<Setter Property="Text" Value="{x:Static strings:AppResources.sendnotifonchangesdisabled}" />
													<Setter Property="FontAttributes" Value="None" />
												</DataTrigger>
											</Label.Triggers>
										</Label>
									</HorizontalStackLayout>
									<Grid ColumnDefinitions=".8*,.2*">
										<Border Grid.Column="0" StrokeShape="RoundRectangle 6" Stroke="Black" BackgroundColor="Black" WidthRequest="160" HorizontalOptions="Start" Padding="2" Margin="3,0,0,3">
											<HorizontalStackLayout Spacing="10" HorizontalOptions="Center">
												<ImageButton Source="browser.png" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=GoToWebCommand}" CommandParameter="{Binding Url}" />
												<ImageButton Source="copy.png" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=CopyCardCommand}" CommandParameter="{Binding Id}" />
												<ImageButton Source="wrench.png" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=EditCardCommand}" CommandParameter="{Binding Id}" />
												<ImageButton Source="delete.png" WidthRequest="25" HeightRequest="25" VerticalOptions="Center" Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=DeleteCardCommand}" CommandParameter="{Binding Id}" />
											</HorizontalStackLayout>
										</Border>
										<Label Grid.Column="1" Text="{Binding Id}" FontSize="14" HorizontalTextAlignment="End" VerticalTextAlignment="Center" Margin="0,0,10,0" />
									</Grid>
								</VerticalStackLayout>
								<Grid WidthRequest="45" HeightRequest="45" HorizontalOptions="End" VerticalOptions="Center" Margin="0,0,5,0">
									<Ellipse Fill="Red" Opacity=".8">
										<Ellipse.Triggers>
											<DataTrigger TargetType="Ellipse" Binding="{Binding CurrentState}" Value="0">
												<Setter Property="Fill" Value="Red" />
											</DataTrigger>
											<DataTrigger TargetType="Ellipse" Binding="{Binding CurrentState}" Value="1">
												<Setter Property="Fill" Value="Green" />
											</DataTrigger>
											<DataTrigger TargetType="Ellipse" Binding="{Binding CurrentState}" Value="2">
												<Setter Property="Fill" Value="Orange" />
											</DataTrigger>
										</Ellipse.Triggers>
									</Ellipse>
									<Label FontSize="10" TextColor="White" HorizontalTextAlignment="Center" VerticalTextAlignment="Center">
										<Label.Triggers>
											<DataTrigger TargetType="Label" Binding="{Binding CurrentState}" Value="0">
												<Setter Property="Text" Value="{x:Static strings:AppResources.fail}" />
											</DataTrigger>
											<DataTrigger TargetType="Label" Binding="{Binding CurrentState}" Value="1">
												<Setter Property="Text" Value="{x:Static strings:AppResources.success}" />
											</DataTrigger>
											<DataTrigger TargetType="Label" Binding="{Binding CurrentState}" Value="2">
												<Setter Property="Text" Value="{x:Static strings:AppResources.waiting}" />
											</DataTrigger>
										</Label.Triggers>
									</Label>
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</DataTemplate>
			</CollectionView.ItemTemplate>
		</CollectionView>
		<Border IsVisible="{Binding HasDataReversed}" WidthRequest="150" HeightRequest="150" StrokeShape="RoundRectangle 75,75,75,75" Padding="20">
			<Border.Background>
				<LinearGradientBrush EndPoint="1,0">
					<GradientStop Color="#FFDC40" Offset="0.1" />
					<GradientStop Color="#A97D32" Offset="1.0" />
				</LinearGradientBrush>
			</Border.Background>
			<Label FontSize="14" HorizontalTextAlignment="Center" VerticalTextAlignment="Center">
				<Label.FormattedText>
					<FormattedString>
						<Span Text="{x:Static strings:AppResources.noservercardfound}" TextColor="Black" />
						<Span Text="{x:Static strings:AppResources.clicktocreatenewone}" TextColor="White" FontAttributes="Bold" />
					</FormattedString>
				</Label.FormattedText>
			</Label>
			<Border.GestureRecognizers>
				<TapGestureRecognizer Command="{Binding CreateNewCardCommand}" CommandParameter="-1" />
			</Border.GestureRecognizers>
		</Border>
		<Border HorizontalOptions="End" VerticalOptions="End" WidthRequest="64" HeightRequest="64" StrokeShape="RoundRectangle 16,16,16,16" Stroke="Transparent" Margin="10">
			<ImageButton x:Name="sars_icon" Source="sars_icon" Command="{Binding Path=GoToWebCommand}" CommandParameter="sarsyazilim.com.tr">
				<ImageButton.Shadow>
					<Shadow Brush="Black" />
				</ImageButton.Shadow>
			</ImageButton>
		</Border>
	</Grid>
</ContentPage>
